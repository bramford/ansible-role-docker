---
- name: Remove default python-pip
  apt:
    name: "python-pip"
    state: absent
  become: yes
  tags: ["docker","apt"]

- name: Install pip with easy_install
  easy_install:
    name: "pip"
  become: yes
  tags: ["docker","apt"]

- name: Install dependency packages
  apt:
    name: "{{ item }}"
    state: present
  become: yes
  with_items:
    - apt-transport-https
    - ca-certificates
  tags: ["docker","apt"]

- name: Add docker apt source
  lineinfile:
    dest: /etc/apt/sources.list.d/docker.list
    line: "deb https://apt.dockerproject.org/repo {{ ansible_distribution|lower }}-{{ ansible_lsb.codename }} main"
    create: yes
  become: yes
  register: add_docker_apt_source
  tags: ["docker","apt"]

- name: Add apt keys
  apt_key:
    keyserver: "{{ docker_apt_key_server }}"
    id: "{{ docker_apt_key_id }}"
    state: present
  become: yes
  tags: ["docker","apt"]

- name: Update apt cache if docker apt source added
  apt:
    update_cache: yes
  become: yes
  when: add_docker_apt_source.changed == True
  tags: ["docker","apt","skip_ansible_lint"]

- name: Purge old docker installations
  apt:
    name: "{{ item }}"
    state: absent
    purge: yes
  with_items:
    - "lxc-docker*"
    - "docker.io*"
  register: purge_old_docker_installations
  failed_when: (purge_old_docker_installations.failed == True) and
               (purge_old_docker_installations.msg|search('No\ package\(s\)\ matching.*available') == False)
  become: yes
  tags: ["docker","apt"]

- name: Install docker engine
  apt:
    name: docker-engine
    state: present
    force: yes
  become: yes
  tags: ["docker","apt"]
