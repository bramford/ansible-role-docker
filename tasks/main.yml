---
- include: RedHat6.yml
  when: (ansible_os_family == "RedHat") and
        (ansible_distribution_major_version|int == 6)

- include: RedHat7.yml
  when: (ansible_os_family == "RedHat") and
        (ansible_distribution_major_version|int == 7)

- include: Debian.yml
  when: ansible_distribution == "Debian"

- include: Ubuntu.yml
  when: (ansible_distribution == "Ubuntu") and
        (ansible_distribution_major_version|int >= 12)

- name: Remove docker-py pip module
  pip:
    name: docker-py
    state: absent
  become: yes
  register: remove_docker_py
  when: docker_pip_py|bool
  tags: ["docker","pip"]

- name: Install docker pip module
  pip:
    name: docker
    version: "{{ docker_pip_version|default(omit) }}"
    state: present
  become: yes
  when: (docker_pip_py|bool) and
        (not docker_pip_compose|bool)
  tags: ["docker","pip"]

- name: Install docker-compose with pip
  pip:
    name: docker-compose
    version: "{{ docker_pip_compose_version|default(omit) }}"
    state: present
  become: yes
  when: docker_pip_compose|bool == True
  tags: ["docker","pip","docker-compose"]

- name: Correct docker-compose executable permission
  file:
    path: /usr/local/bin/docker-compose
    mode: 0777
  become: yes
  when: docker_pip_compose|bool == True
  tags: ["docker","docker-compose"]

- name: Configure dockerd systemd config
  template:
    src: docker-systemd.conf.j2
    dest: /etc/systemd/system/docker.service.d/docker.conf
  become: yes
  notify:
    - systemctl daemon-reload
    - restart docker
  when: (ansible_service_mgr == "systemd") and
        (docker_startup_options is defined) and
        (docker_startup_options != "")
  tags: ["docker","configuration"]

- name: Configure docker metrics publishing
  template:
    src: docker-daemon.json.j2
    dest: /etc/docker/daemon.json
  become: yes
  notify:
    - restart docker
  when: docker_metrics_enabled
  tags: ["docker","configuration"]

- name: Create docker group
  group:
    name: "{{ docker_group }}"
  become: yes
  notify: restart docker
  tags: ["docker","groups"]

- name: Add users to docker group
  user:
    name: "{{ item }}"
    append: yes
    groups: "{{ docker_group }}"
  with_items: "{{ docker_users }}"
  become: yes
  notify: restart docker
  tags: ["docker","users"]

- name: Enable or disable docker
  service:
    name: "{{ docker_service_name }}"
    enabled: "{{ docker_service_enabled }}"
  become: yes
  tags: ["docker","service"]

- name: Start or stop docker
  service:
    name: "{{ docker_service_name }}"
    state: "{{ docker_service_state }}"
  become: yes
  register: start_stop_docker
  tags: ["docker","service"]

- meta: flush_handlers
